apply plugin: 'org.springframework.boot'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}


dependencies {
    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"

    // CorDapp dependencies.
    compile project(":contracts")
    compile project(":workflows")
    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"
    compileOnly("org.springframework.boot:spring-boot-devtools:$spring_boot_version")
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.0'

    // https://mvnrepository.com/artifact/com.github.rholder/guava-retrying
    //implementation 'com.github.rholder:guava-retrying:+'
    // https://mvnrepository.com/artifact/com.github.rholder/guava-retrying
    implementation group: 'com.github.rholder', name: 'guava-retrying', version: '2.+'


}

springBoot {
    mainClassName = "com.template.webserver.Starter"
}

/* The Client is the communication channel between the external and the node. This task will help you immediately
 * execute your rpc methods in the main method of the client.kt. You can somewhat see this as a quick test of making
 * RPC calls to your nodes.
 */
task runTemplateClient(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.Client'
    args 'localhost:10006', 'user1', 'test'
}

/* This task will start the springboot server that connects to your node (via RPC connection). All of the http requests
 * are in the Controller file. You can leave the Server.kt and NodeRPCConnection.kt file untouched for your use.
 */
task runTemplateServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
}
